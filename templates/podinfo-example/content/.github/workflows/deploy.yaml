name: Deploy ${{ values.name | capitalize }}

on:
  push:
    branches: main
{% raw %}
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
{% endraw %}
  IMAGE: ${{ values.image }}
{%- if values.cloudProvider === "aws" -%}
{% raw %}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
{% endraw %}
{%- elif values.cloudProvider === "gcp" -%}
{% raw %}
  GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  GCP_SERVICE_ACCOUNT: ${{ vars.GCP_SERVICE_ACCOUNT }}
  GCP_GAR_HOST: ${{ vars.GCP_GAR_HOST }}
  GCP_GAR_NAME: ${{ vars.GCP_GAR_NAME }}
{% endraw %}
{%- else -%}
# Unknown cloud provider: ${{ values.cloudProvider }}
{% endif %}
  SCORE_HUMANITEC_VERSION: '0.9.1'
  HUMCTL_VERSION: '0.13.0'
  APP_NAME: ${{ values.name }}

{% raw %}
jobs:
  deploy:
    name: Build & Notify Humanitec
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set Tag with SHA
        run: echo "TAG=`echo $GITHUB_SHA | cut -c 1-7`" >> $GITHUB_ENV
{% endraw %}
{%- if values.cloudProvider === "aws" -%}
{% raw %}
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: login to aws ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: "set CONTAINER_REGISTRY env var"
        run: |
          echo "CONTAINER_REGISTRY=$REGISTRY" >> "$GITHUB_ENV"
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
{% endraw %}
{%- elif values.cloudProvider === "gcp" -%}
{% raw %}
      - name: configure gcp credentials
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: login to gcp gar
        run: |
          gcloud auth configure-docker ${{ env.GCP_GAR_HOST }} --quiet
          echo "CONTAINER_REGISTRY=${{ env.GCP_GAR_NAME }}" >> "$GITHUB_ENV"
{% endraw %}
{% endif %}
{% raw %}
      - run: docker build --platform linux/amd64 . -t $CONTAINER_REGISTRY/$IMAGE:$TAG
      - run: docker push $CONTAINER_REGISTRY/$IMAGE:$TAG

      - uses: humanitec/setup-cli-action@v1
        with:
          version: ${{ env.HUMCTL_VERSION }}

      - name: Inform Humanitec
        run: |-
          humctl create artefact-version \
            --token ${{ secrets.HUMANITEC_TOKEN }} \
            --org ${{ vars.HUMANITEC_ORG_ID }} \
            -t container \
            -n $CONTAINER_REGISTRY/$IMAGE \
            --version $TAG \
            --ref $GITHUB_REF \
            --commit $GITHUB_SHA

      - uses: score-spec/setup-score@v2
        with:
          file: score-humanitec
          version: ${{ env.SCORE_HUMANITEC_VERSION }}

      - name: Deploy using Score
        run: |
          score-humanitec delta \
            --retry \
            --deploy \
            --token ${{ secrets.HUMANITEC_TOKEN }} \
            --org ${{ vars.HUMANITEC_ORG_ID }} \
            --app ${{ env.APP_NAME }} \
            --env development \
            -f score.yaml \
            --extensions humanitec.score.yaml \
            --workload-source-url "https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/score.yaml" \
            --property containers.frontend.image=$CONTAINER_REGISTRY/$IMAGE:$TAG \
            --message "${{ github.event.head_commit.message }}"
{% endraw %}
